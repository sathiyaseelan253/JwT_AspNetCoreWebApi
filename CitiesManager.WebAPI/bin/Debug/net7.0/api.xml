<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CitiesManager.WebAPI</name>
    </assembly>
    <members>
        <member name="T:CitiesManager.WebAPI.Controllers.AccountController">
            <summary>
            Account controller
            </summary>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{CitiesManager.Core.Identity.ApplicationRole},CitiesManager.Core.ServiceContracts.IJwtService,Microsoft.Extensions.Logging.ILogger{CitiesManager.WebAPI.Controllers.AccountController})">
            <summary>
            Login constructor
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="roleManager"></param>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.PostRegister(CitiesManager.Core.DTO.RegisterDTO)">
            <summary>
            Register user
            </summary>
            <param name="registerDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.IsEmailAlreadyRegistered(System.String)">
            <summary>
            Check email is already used
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.PostLogin(CitiesManager.Core.DTO.LoginDTO)">
            <summary>
            Login user
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.GetLogout">
            <summary>
            Logout 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.AccountController.GenerateNewToken(CitiesManager.Core.DTO.TokenModel)">
            <summary>
            Generate new JWT Access token, if expired using refresh token
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="T:CitiesManager.WebAPI.Controllers.v1.CitiesController">
            <summary>
            Cities controller
            </summary>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.GetCities">
            <summary>
            To get list of cities (including city ID and city name) from 'cities' table
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Filters.PersonListActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            ActionFilter, method = OnActionExecuted => Code which gets executed after action method executed
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CitiesManager.WebAPI.Filters.PersonListActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            ActionFilter= OnActionExecuting => Code which gets executed before action method executed
            </summary>
            <param name="context"></param>
        </member>
    </members>
</doc>
